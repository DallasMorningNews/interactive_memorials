{"version":3,"sources":["+custom.js"],"names":["$","document","ready","writeSubmissions","data","each","k","v","content","submissionTemplate","append","formatData","parks","currentSub","location","lat","long","races","push","_","uniqBy","key","value","currentPark","currentRace","race","indexOf","createMap","GeoJSON","parse","Point","include","console","log","map","addSource","type","addLayer","id","source","paint","circle-radius","stops","circle-color","circle-opacity","property","filteringData","filteredData","submissionData","clearMap","off","removeSource","removeLayer","clickLocation","centerCoord","coord","popupContentCir","popupContentNoCir","geocoder","mapboxgl","Geocoder","container","click","text","this","val","Map","center","zoom","style","scrollZoom","disable","addControl","accessToken","Navigation","on","e","features","queryRenderedFeatures","point","layers","getCanvas","cursor","Handlebars","compile","html","getJSON","lngLat","lng","popup","length","feature","Popup","setLngLat","geometry","coordinates","setHTML","properties","addTo","flyTo","removeClass","addClass","hide","ev","result","show","attr","d","Date","year","getFullYear"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\n\t\tvar submissionData;\n\t\tvar filteredData = [];\n\t\tvar clickLocation;\n\t\tvar centerCoord;\n\t\tvar coord = [];\n\t\tvar popupContentCir = \"<p>Would you like to add a memorial suggestion here?</p><a class='yes-btn-cir btn btn-primary btn-sm'>Yes</a><a class='no-btn btn btn-default btn-sm'>No</a>\";\n\t\tvar popupContentNoCir = \"<p>Would you like to add a memorial suggestion here?</p><a class='yes-btn-nocir btn btn-primary btn-sm'>Yes</a><a class='no-btn btn btn-default btn-sm'>No</a>\";\n\t\tvar geocoder = new mapboxgl.Geocoder({\n\t\t\t    container: 'geocoder-container' // Optional. Specify a unique container for the control to be added to.\n\t\t\t});\n\n\t\t//bootstrap dropdown\n\n\t    $(\".dropdown-menu li a\").click(function(){\n\n\t      $(\".btn:first-child\").text($(this).text());\n\t      $(\".btn:first-child\").val($(this).text());\n\n\t   });\n\n\n\n\n\t\t// mapbox gl code\n\t\t\t// mapboxgl.util.getJSON('http://maps.dallasnews.com/styles.json', function(req, styles) {\n\t\t\t//   styles.layers = styles.layers.map(function(layer) {\n\t\t\t//     if(layer.id === 'building') {\n\t\t\t//       layer.paint['fill-color'] = 'red';\n\t\t\t//     }\n\t\t\t//     else if(layer.id === 'waterway' || layer.id === 'waterway_stream') {\n\t\t\t//       layer.paint['line-color'] = '#2B93B5';\n\t\t\t//     }\n\t\t\t//     else if(layer.id === 'water') {\n\t\t\t//       layer.paint['fill-color'] = '#2B93B5';\n\t\t\t//     }\n\t\t\t// \telse if(layer.id === 'landuse_park') {\n\t\t\t//       layer.paint['fill-color'] = 'green';\n\t\t\t//     }\n\t\t\t//     return layer;\n\t\t\t//   });\n\t\t\t//\n\t\t    // });\n\n\t\t// BUILDING THE MAP\n\t\t\tvar map = new mapboxgl.Map({\n\t\t\t\tcontainer: 'map', // the #id of your map\n\t\t\t\tcenter: [-96.9785, 32.8924], // just like Leaflet, where the map should centers on load\n\t\t\t\tzoom: 9, // just like Leaflet, the map's default zoom level\n\t\t\t\tstyle: 'http://maps.dallasnews.com/styles.json' // <= this tells Mapbox GL to use our vector tiles\n\t\t\t});\n\n\n\t\t// MAP CUSTOMIZATION\n\t\t\t// disables zoom\n\t\t\t\tmap.scrollZoom.disable();\n\t\t\t// add search bar\n\t\t\t\tmap.addControl(geocoder);\n\t\t\t\tmapboxgl.accessToken = 'pk.eyJ1IjoibWFjbWFuIiwiYSI6ImVEbmNmZjAifQ.zVzy9cyjNT1tMYOTex51HQ';\n\t\t\t// adds zoom options\n\t\t\t\tmap.addControl(new mapboxgl.Navigation());\n\t\t\t// adds cursor: pointer to map points\n\t\t\t\tmap.on('mousemove', function (e) {\n\t\t\t\t    var features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\t\t\t\t    map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\t\t\t\t});\n\n\t\t// ADDING DATA TO MAP\n\t\t\t// creating and compiling the template for our person objects\n\t\t\t    var submissionTemplate =  Handlebars.compile($(\"#submission\").html());\n\n\t\t\t\t$.getJSON('js/data.json', function(data) {\n\t\t\t\t\tsubmissionData = data;\n\t\t\t\t\twriteSubmissions(submissionData);\n\t\t\t\t\tmap.on('load', function () {\n\t\t\t\t\t\tformatData(submissionData);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfunction writeSubmissions(data) {\n\t\t\t\t\t$.each(data, function(k,v) {\n\t\t\t\t\t\t   var content = submissionTemplate(v);\n\t\t\t\t\t\t   $(\".submissions\").append(content);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\n\n\n\t\t\t\tfunction formatData(data) {\n\t\t\t\t\t// placeholder array for parks mapfeatureg data\n\t\t\t\t\tvar parks = [];\n\n\n\t\t\t\t\t// iterate over our original datra and create a new object to add to our parks mapfeatureg array\n\t\t\t\t\t$.each(data, function(k,v) {\n\n\t\t\t\t\t  var currentSub = {\n\t\t\t\t\t    \"location\": v.location,\n\t\t\t\t\t    \"lat\": v.lat,\n\t\t\t\t\t    \"long\": v.long,\n\t\t\t\t\t    \"races\": [ ]\n\t\t\t\t\t};\n\n\t\t\t\t\t  parks.push(currentSub);\n\t\t\t\t\t});\n\n\n\t\t\t\t\t// LODASH: go through our new parks mapfeatureg data, and filter out any that have a duplicate location\n\t\t\t\t\tparks = _.uniqBy(parks, \"location\");\n\n\t\t\t\t\t// iterate over the submissions data again and grab each one's park and race\n\t\t\t\t\t$.each(data, function(key, value) {\n\t\t\t\t\t  var currentPark = value.location;\n\t\t\t\t\t  var currentRace = value.race;\n\n\t\t\t\t\t  // then, iterate over the parks mapfeatureg data, and find the matching park\n\t\t\t\t\t  $.each(parks, function(k,v) {\n\t\t\t\t\t    if (currentPark === v.location) {\n\n\t\t\t\t\t      // then, check over the races array over that park, and if the currentRace isn't included, add it\n\t\t\t\t\t      if (_.indexOf(v.races, currentRace) === -1) {\n\t\t\t\t\t        v.races.push(currentRace);\n\t\t\t\t\t      }\n\t\t\t\t\t    }\n\t\t\t\t\t  });\n\t\t\t\t\t});\n\n\t\t\t\t\tcreateMap(parks);\n\n\t\t\t\t\t// $(\"#black\").click(function(){\n\t\t\t\t\t//\n\t\t\t\t\t// \tvar filteredParks = [];\n\t\t\t\t\t//\n\t\t\t\t\t// \tif (_.indexOf(v.races, \"Black or African Am.\") === -1) {\n\t\t\t\t\t// \t  v.races.push(filteredParks);\n\t\t\t\t\t// \t}\n\t\t\t\t\t//\n\t\t\t\t\t// \tmap.removeLayer(memorialSubmissions);\n\t\t\t\t\t// \tcreateMap(filteredParks);\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t// });\n\t\t\t\t}\n\n\n\n\t\t\t\t// Map points customization\n\t\t\t\t\tfunction createMap(data) {\n\t\t\t\t\t\tdata = GeoJSON.parse(data, {Point: ['lat', 'long'], include: ['race', 'location']});\n\t\t\t\t\t\tconsole.log(data);\n\n\t\t\t\t\t\t\t// adding the data source\n\t\t\t\t            map.addSource(\"memorials\", {\n\t\t\t\t                type: \"geojson\",\n\t\t\t\t                data: data\n\t\t\t\t            });\n\n\t\t\t\t            // adding the data layer\n\t\t\t\t            map.addLayer({\n\t\t\t\t                \"id\": \"memorialSubmissions\",\n\t\t\t\t                \"source\": \"memorials\",\n\t\t\t\t                \"type\": \"circle\",\n\t\t\t\t                \"paint\": {\n\t\t\t\t                    \"circle-radius\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t                        stops: [[1, 10], [8, 10], [16, 9]]\n\t\t\t\t                    },\n\t\t\t\t                    \"circle-color\": \"#FBD44B\",\n\t\t\t\t                    \"circle-opacity\": {\n\t\t\t\t                        \"property\": \"opacity\",\n\t\t\t\t                        \"stops\": [\n\t\t\t\t                            [0, 0], [1, 1]\n\t\t\t\t                        ]\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            });\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmap.on('click', function (e) {\n                        clickLocation = e.lngLat;\n                        coord = [clickLocation.lng, clickLocation.lat];\n\n                        // setting features equal to all the circles on the map\n                        var features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\n                        var popup;\n                        // checking to see if the click was on one of the circles.\n                        // if it's not, do all the code inside this if statement\n\n                        if (!features.length) {\n                            popup = new mapboxgl.Popup()\n                                .setLngLat(coord)\n\t\t\t\t\t\t\t\t.setHTML(\"<h5>\" + popupContentNoCir + \"</h5>\")\n                                .addTo(map);\n\t\t\t\t\t\t\t\tmap.flyTo({center: coord});\n                        }\n\n                        // else, if the click is on the circle, do all the code\n                        // inside this else statement\n                        else {\n                            var feature = features[0];\n\n                            // Populate the popup and set its coordinates\n                            // based on the feature found.\n                            popup = new mapboxgl.Popup()\n                                .setLngLat(feature.geometry.coordinates)\n\t\t\t\t\t\t\t\t.setHTML(\"<h5>\" + feature.properties.location + \"</h5>\" + popupContentCir)\n                                .addTo(map);\n                        }\n\n\t\t\t\t\t\tif (features.length) {\n\t\t\t\t\t\t\t// Get coordinates from the symbol and center the map on those coordinates\n\t\t\t\t\t\t\tmap.flyTo({center: features[0].geometry.coordinates});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Shows/hides submission form and respective buttons\n\t\t\t\t\t\t// Adds value to textarea\n\n\t\t\t\t\t\t\t$('#form-wrapper').removeClass('visible');\n\n\t\t\t\t\t\t\t$(\".yes-btn-cir\").click(function() {\n\t\t\t\t\t\t\t\t$(\"#form-wrapper\").addClass(\"visible\");\n\t\t\t\t\t\t\t\t$('#see-form, .map-wrapper h1').hide();\n\t\t\t\t\t\t\t\t$('.mapboxgl-popup').hide();\n\t\t\t\t\t\t\t\t$('textarea#location-blank').val(feature.properties.location + coord);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t$(\".no-btn\").click(function() {\n\t\t\t\t\t\t\t\t$('.mapboxgl-popup').hide();\n\t\t\t\t\t\t\t\t$('#form-wrapper').removeClass('visible');\n\t\t\t\t\t\t\t\t$('textarea#location-blank').val('');\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t$(\".yes-btn-nocir\").click(function() {\n\t\t\t\t\t\t\t\t$(\"#form-wrapper\").addClass(\"visible\");\n\t\t\t\t\t\t\t\t$('#see-form, .map-wrapper h1').hide();\n\t\t\t\t\t\t\t\t$('.mapboxgl-popup').hide();\n\t\t\t\t\t\t\t\t$('textarea#location-blank').val(coord);\n\t\t\t\t\t\t\t});\n\n\n                    });\n\n\t\t\t\t\t// Listen for the `geocoder.input` event that is triggered when a user\n\t\t\t\t    // makes a selection and add a symbol that matches the result.\n\t\t\t\t    geocoder.on('result', function(ev) {\n\n\t\t\t\t\t\t$('.mapboxgl-popup').hide();\n\n\t\t\t\t\t\tcenterCoord = ev.result.geometry.coordinates;\n                        var coord = [centerCoord[0], centerCoord[1]];\n\n                        var popup;\n\n                        popup = new mapboxgl.Popup()\n\t\t\t\t\t\t\t.setLngLat(coord)\n\t\t\t\t\t\t\t.setHTML(\"<h5>\" + popupContentNoCir + \"</h5>\")\n                            .addTo(map);\n\t\t\t\t\t\t\t// map.flyTo({center: coord});\n                        // }\n\n\t\t\t\t    });\n\n\t\t\t\t\t// Shows/hides submission form and respective buttons\n\t\t\t\t\t\t$(\"#see-form, .map-wrapper h1\").click(function() {\n\t\t\t\t\t\t\t$(\"#form-wrapper\").addClass(\"visible\");\n\t\t\t\t\t\t\t$('#see-form, .map-wrapper h1').hide();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$('.close').click(function() {\n\t\t\t\t\t\t\t$('#form-wrapper').removeClass('visible');\n\t\t\t\t\t\t\t$('#see-form, .map-wrapper h1').show();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// Getting the value of the dropdown\n\t\t\t\t\t\t$('.dropdown-menu li').click(function() {\n\t\t\t\t\t\t\tvar race = $(this).attr(\"data-race\");\n\t\t\t\t\t\t\tfilteringData(race);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// Formatting the filteredData\n\t\t\t\t\tfunction filteringData(race) {\n\t\t\t\t\t\tif (race !== \"all\") {\n\t\t\t\t\t\t\tfilteredData = [];\n\t\t\t\t\t\t\t$.each(submissionData, function(k,v) {\n\t\t\t\t\t\t\t\tif (v.race === race) {\n\t\t\t\t\t\t\t\t\tfilteredData.push(v);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(filteredData);\n\n\t\t\t\t\t\t\tclearMap();\n\t\t\t\t\t\t\tformatData(filteredData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclearMap();\n\t\t\t\t\t\t\tformatData(submissionData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clears the map of markers\n\t\t\t\t\tfunction clearMap() {\n\t\t\t\t\t\tconsole.log(\"Test\");\n\t\t\t\t\t\tmap.off(\"click\");\n\t\t\t\t\t\tmap.off(\"mousemove\");\n\t\t\t\t\t\tmap.removeSource(\"memorials\");\n\t\t\t\t\t\tmap.removeLayer(\"memorialSubmissions\");\n\t\t\t\t\t}\n\n\n\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar d = new Date();\n\tvar year = d.getFullYear();\n\n\t$('.copyright').text(year);\n\n\n\t// some code blocks require javascript to function, like slideshows, synopsis blocks, etc\n\t// you can find that code here: https://github.com/DallasMorningNews/generator-dmninteractives/wiki/Cookbook\n\n\n\n});\n"],"sourceRoot":"/source/"}