{"version":3,"sources":["+custom.js"],"names":["$","document","ready","writeSubmissions","data","each","k","v","content","submissionTemplate","append","formatData","parks","currentSub","location","lat","long","races","push","_","uniqBy","key","value","currentPark","currentRace","race","indexOf","createMap","GeoJSON","parse","Point","include","map","on","addSource","type","addLayer","id","source","paint","circle-radius","stops","circle-color","circle-opacity","property","click","addClass","hide","removeClass","show","submissionData","clickLocation","mapboxgl","Map","container","center","zoom","style","scrollZoom","disable","addControl","Geocoder","accessToken","Navigation","e","features","queryRenderedFeatures","point","layers","getCanvas","cursor","Handlebars","compile","html","getJSON","lngLat","coord","lng","console","log","popup","length","feature","Popup","setLngLat","geometry","coordinates","setHTML","properties","addTo","d","Date","year","getFullYear","text"],"mappings":"AAAAA,EAAAC,UAAAC,MAAA,WAyEA,QAAAC,GAAAC,GACAJ,EAAAK,KAAAD,EAAA,SAAAE,EAAAC,GACA,GAAAC,GAAAC,EAAAF,EACAP,GAAA,gBAAAU,OAAAF,KAIA,QAAAG,GAAAP,GAEA,GAAAQ,KAGAZ,GAAAK,KAAAD,EAAA,SAAAE,EAAAC,GAEA,GAAAM,IACAC,SAAAP,EAAAO,SACAC,IAAAR,EAAAQ,IACAC,OAAAT,EAAAA,QACAU,SAGAL,GAAAM,KAAAL,KAKAD,EAAAO,EAAAC,OAAAR,EAAA,YAGAZ,EAAAK,KAAAD,EAAA,SAAAiB,EAAAC,GACA,GAAAC,GAAAD,EAAAR,SACAU,EAAAF,EAAAG,IAGAzB,GAAAK,KAAAO,EAAA,SAAAN,EAAAC,GACAgB,IAAAhB,EAAAO,UAGAK,EAAAO,QAAAnB,EAAAU,MAAAO,SACAjB,EAAAU,MAAAC,KAAAM,OAMAG,EAAAf,GAIA,QAAAe,GAAAvB,GACAA,EAAAwB,QAAAC,MAAAzB,GAAA0B,OAAA,MAAA,QAAAC,SAAA,OAAA,cAEAC,EAAAC,GAAA,OAAA,WAEAD,EAAAE,UAAA,aACAC,KAAA,UACA/B,KAAAA,IAIA4B,EAAAI,UACAC,GAAA,sBACAC,OAAA,YACAH,KAAA,SACAI,OACAC,iBAEAC,QAAA,EAAA,KAAA,EAAA,KAAA,GAAA,KAEAC,eAAA,UACAC,kBACAC,SAAA,UACAH,QACA,EAAA,IAAA,EAAA,UA5IAzC,EAAA,8BAAA6C,MAAA,WACA7C,EAAA,iBAAA8C,SAAA,WACA9C,EAAA,8BAAA+C,SAGA/C,EAAA,UAAA6C,MAAA,WACA7C,EAAA,iBAAAgD,YAAA,WACAhD,EAAA,8BAAAiD,QAIA,IAAAC,GACAC,EAuBAnB,EAAA,GAAAoB,UAAAC,KACAC,UAAA,MACAC,iBAAA,SACAC,KAAA,EACAC,MAAA,0CAMAzB,GAAA0B,WAAAC,UAEA3B,EAAA4B,WAAA,GAAAR,UAAAS,UACAT,SAAAU,YAAA,mEAEA9B,EAAA4B,WAAA,GAAAR,UAAAW,YAEA/B,EAAAC,GAAA,YAAA,SAAA+B,GACA,GAAAC,GAAAjC,EAAAkC,sBAAAF,EAAAG,OAAAC,QAAA,wBACApC,GAAAqC,YAAAZ,MAAAa,OAAAL,EAAA,OAAA,UAAA,IAKA,IAAAxD,GAAA8D,WAAAC,QAAAxE,EAAA,eAAAyE,OAEAzE,GAAA0E,QAAA,eAAA,SAAAtE,GACA8C,EAAA9C,EACAD,EAAA+C,GACAvC,EAAAuC,KA6GAlB,EAAAC,GAAA,QAAA,SAAA+B,GACAb,EAAAa,EAAAW,MACA,IAAAC,IAAAzB,EAAA0B,IAAA1B,EAAApC,IACA+D,SAAAC,IAAA5B,EAGA,IAEA6B,GAFAf,EAAAjC,EAAAkC,sBAAAF,EAAAG,OAAAC,QAAA,wBAKA,IAAAH,EAAAgB,OASA,CACA,GAAAC,GAAAjB,EAAA,EAIAe,IAAA,GAAA5B,UAAA+B,OACAC,UAAAF,EAAAG,SAAAC,aACAC,QAAA,WAAAL,EAAAM,WAAA1E,SAAA,mEACA2E,MAAAzD,OAhBAgD,IAAA,GAAA5B,UAAA+B,OACAC,UAAAR,GACAW,QAAA,SACAE,MAAAzD,IAuDA,IAAA0D,GAAA,GAAAC,MACAC,EAAAF,EAAAG,aAEA7F,GAAA,cAAA8F,KAAAF","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\n\n\t\t// Shows/hides submission form\n\t\t\t$(\"#see-form, .map-wrapper h1\").click(function() {\n\t\t\t\t$(\"#form-wrapper\").addClass(\"visible\");\n\t\t\t\t$('#see-form, .map-wrapper h1').hide();\n\t\t\t});\n\n\t\t\t$('.close').click(function() {\n\t\t\t\t$('#form-wrapper').removeClass('visible');\n\t\t\t\t$('#see-form, .map-wrapper h1').show();\n\t\t\t});\n\n\n\t\tvar submissionData;\n\t\tvar clickLocation;\n\n\t\t// mapbox gl code\n\t\t\t// mapboxgl.util.getJSON('http://maps.dallasnews.com/styles.json', function(req, styles) {\n\t\t\t//   styles.layers = styles.layers.map(function(layer) {\n\t\t\t//     if(layer.id === 'building') {\n\t\t\t//       layer.paint['fill-color'] = 'red';\n\t\t\t//     }\n\t\t\t//     else if(layer.id === 'waterway' || layer.id === 'waterway_stream') {\n\t\t\t//       layer.paint['line-color'] = '#2B93B5';\n\t\t\t//     }\n\t\t\t//     else if(layer.id === 'water') {\n\t\t\t//       layer.paint['fill-color'] = '#2B93B5';\n\t\t\t//     }\n\t\t\t// \telse if(layer.id === 'landuse_park') {\n\t\t\t//       layer.paint['fill-color'] = 'green';\n\t\t\t//     }\n\t\t\t//     return layer;\n\t\t\t//   });\n\t\t\t//\n\t\t    // });\n\n\t\t// BUILDING THE MAP\n\t\t\tvar map = new mapboxgl.Map({\n\t\t\t\tcontainer: 'map', // the #id of your map\n\t\t\t\tcenter: [-96.9785, 32.8924], // just like Leaflet, where the map should centers on load\n\t\t\t\tzoom: 9, // just like Leaflet, the map's default zoom level\n\t\t\t\tstyle: 'http://maps.dallasnews.com/styles.json' // <= this tells Mapbox GL to use our vector tiles\n\t\t\t});\n\n\n\t\t// MAP CUSTOMIZATION\n\t\t\t// disables zoom\n\t\t\t\tmap.scrollZoom.disable();\n\t\t\t// add search bar\n\t\t\t\tmap.addControl(new mapboxgl.Geocoder());\n\t\t\t\tmapboxgl.accessToken = 'pk.eyJ1IjoibWFjbWFuIiwiYSI6ImVEbmNmZjAifQ.zVzy9cyjNT1tMYOTex51HQ';\n\t\t\t// adds zoom options\n\t\t\t\tmap.addControl(new mapboxgl.Navigation());\n\t\t\t// adds cursor: pointer to map points\n\t\t\t\tmap.on('mousemove', function (e) {\n\t\t\t\t    var features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\t\t\t\t    map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\t\t\t\t});\n\n\t\t// ADDING DATA TO MAP\n\t\t\t// creating and compiling the template for our person objects\n\t\t\t    var submissionTemplate =  Handlebars.compile($(\"#submission\").html());\n\n\t\t\t\t$.getJSON('js/data.json', function(data) {\n\t\t\t\t\tsubmissionData = data;\n\t\t\t\t\twriteSubmissions(submissionData);\n\t\t\t\t\tformatData(submissionData);\n\t\t\t\t});\n\n\t\t\t\tfunction writeSubmissions(data) {\n\t\t\t\t\t$.each(data, function(k,v) {\n\t\t\t\t\t\t   var content = submissionTemplate(v);\n\t\t\t\t\t\t   $(\".submissions\").append(content);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction formatData(data) {\n\t\t\t\t\t// placeholder array for parks mapfeatureg data\n\t\t\t\t\tvar parks = [ ];\n\n\t\t\t\t\t// iterate over our original datra and create a new object to add to our parks mapfeatureg array\n\t\t\t\t\t$.each(data, function(k,v) {\n\n\t\t\t\t\t  var currentSub = {\n\t\t\t\t\t    \"location\": v.location,\n\t\t\t\t\t    \"lat\": v.lat,\n\t\t\t\t\t    \"long\": v.long,\n\t\t\t\t\t    \"races\": [ ]\n\t\t\t\t\t};\n\n\t\t\t\t\t  parks.push(currentSub);\n\t\t\t\t\t});\n\n\n\t\t\t\t\t// LODASH: go through our new parks mapfeatureg data, and filter out any that have a duplicate location\n\t\t\t\t\tparks = _.uniqBy(parks, \"location\");\n\n\t\t\t\t\t// iterate over the submissions data again and grab each one's park and race\n\t\t\t\t\t$.each(data, function(key, value) {\n\t\t\t\t\t  var currentPark = value.location;\n\t\t\t\t\t  var currentRace = value.race;\n\n\t\t\t\t\t  // then, iterate over the parks mapfeatureg data, and find the matching park\n\t\t\t\t\t  $.each(parks, function(k,v) {\n\t\t\t\t\t    if (currentPark === v.location) {\n\n\t\t\t\t\t      // then, check over the races array over that park, and if the currentRace isn't included, add it\n\t\t\t\t\t      if (_.indexOf(v.races, currentRace) === -1) {\n\t\t\t\t\t        v.races.push(currentRace);\n\t\t\t\t\t      }\n\t\t\t\t\t    }\n\t\t\t\t\t  });\n\t\t\t\t\t});\n\n\t\t\t\t\tcreateMap(parks);\n\t\t\t\t}\n\n\t\t\t\t// Map points customization\n\t\t\t\t\tfunction createMap(data) {\n\t\t\t\t\t\tdata = GeoJSON.parse(data, {Point: ['lat', 'long'], include: ['race', 'location']});\n\n\t\t\t\t\t\tmap.on('load', function () {\n\t\t\t\t\t\t\t// adding the data source\n\t\t\t\t            map.addSource(\"memorials\", {\n\t\t\t\t                type: \"geojson\",\n\t\t\t\t                data: data\n\t\t\t\t            });\n\n\t\t\t\t            // adding the data layer\n\t\t\t\t            map.addLayer({\n\t\t\t\t                \"id\": \"memorialSubmissions\",\n\t\t\t\t                \"source\": \"memorials\",\n\t\t\t\t                \"type\": \"circle\",\n\t\t\t\t                \"paint\": {\n\t\t\t\t                    \"circle-radius\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t                        stops: [[1, 10], [8, 10], [16, 9]]\n\t\t\t\t                    },\n\t\t\t\t                    \"circle-color\": \"#FBD44B\",\n\t\t\t\t                    \"circle-opacity\": {\n\t\t\t\t                        \"property\": \"opacity\",\n\t\t\t\t                        \"stops\": [\n\t\t\t\t                            [0, 0], [1, 1]\n\t\t\t\t                        ]\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            });\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// map.on('click', function (e) {\n\t\t\t\t\t//\n\t\t\t\t\t//     var clickLocation = e.lnglat;\n\t\t\t\t\t//     var popup;\n\t\t\t\t\t//     var features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\t\t\t\t\t//\n\t\t\t\t\t//     if (!features.length) {\n\t\t\t\t\t//\n\t\t\t\t\t//         popup = new mapboxgl.Popup()\n\t\t\t\t\t//             .setLngLat(clickLocation)\n\t\t\t\t\t//             .setHTML(\"This location has no submissions. Would you like to add one?\")\n\t\t\t\t\t//             .addTo(map);\n\t\t\t\t\t//\n\t\t\t\t\t//     } else {\n\t\t\t\t\t//         var feature = features[0];\n\t\t\t\t\t//\n\t\t\t\t\t//         popup = new mapboxgl.Popup()\n\t\t\t\t\t//             .setLngLat(feature.geometry.coordinates)\n\t\t\t\t\t//             .setHTML(\"<strong>\" + feature.properties.location + \"</strong><br> Would you like to add a memorial submission here?\")\n\t\t\t\t\t//             .addTo(map);\n\t\t\t\t\t//     }\n\t\t\t\t\t//\n\t\t\t\t\t// });\n\n\t\t\t\t\tmap.on('click', function (e) {\n                        clickLocation = e.lngLat;\n                        var coord = [clickLocation.lng, clickLocation.lat];\n                        console.log(clickLocation);\n\n                        // setting features equal to all the circles on the map\n                        var features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\n                        var popup;\n                        // checking to see if the click was on one of the circles.\n                        // if it's not, do all the code inside this if statement\n                        if (!features.length) {\n                            popup = new mapboxgl.Popup()\n                                .setLngLat(coord)\n                                .setHTML(\"Hello\")\n                                .addTo(map);\n                        }\n\n                        // else, if the click is on the circle, do all the code\n                        // inside this else statement\n                        else {\n                            var feature = features[0];\n\n                            // Populate the popup and set its coordinates\n                            // based on the feature found.\n                            popup = new mapboxgl.Popup()\n                                .setLngLat(feature.geometry.coordinates)\n\t\t\t\t\t\t\t\t.setHTML(\"<strong>\" + feature.properties.location + \"</strong><br> Would you like to add a memorial submission here?\")\n                                .addTo(map);\n                        }\n\n                    });\n\n\t\t\t\t\t// map.on('click', function (e) {\n\t\t\t\t\t//\n\t\t\t\t\t// \tvar pinCoord;\n\t\t\t\t\t//\n\t\t\t\t\t// \tif (e.lngLat === pinCoord) {\n\t\t\t\t\t// \t\tclickLocation = pinCoord;\n\t\t\t\t\t// \t} else {\n\t\t\t\t\t// \t\tclickLocation = e.lngLat;\n\t\t\t\t\t// \t}\n\t\t\t\t\t//\n\t\t\t\t\t// \tvar popup1 = new mapboxgl.Popup()\n\t\t\t\t\t// \t\t.setLngLat(clickLocation)\n\t\t\t\t\t// \t\t.setHTML(\"This location has no submissions. Would you like to add one?\")\n\t\t\t\t\t// \t\t.addTo(map);\n\t\t\t\t\t//\n\t\t\t\t\t// \tvar features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\t\t\t\t\t//\n\t\t\t\t\t// \tif (!features.length) {\n\t\t\t\t\t// \t\treturn;\n\t\t\t\t\t// \t}\n\t\t\t\t\t//\n\t\t\t\t\t// \tvar feature = features[0];\n\t\t\t\t\t//\n\t\t\t\t\t// \tpinCoord = feature.geometry.coordinates;\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t// \tpopup1.remove();\n\t\t\t\t\t//\n\t\t\t\t\t// \tvar popup2 = new mapboxgl.Popup()\n\t\t\t\t\t// \t\t.setLngLat(clickLocation)\n\t\t\t\t\t// \t\t.setHTML(\"<strong>\" + feature.properties.location + \"</strong><br> Would you like to add a memorial submission here?\")\n\t\t\t\t\t// \t\t.addTo(map);\n\t\t\t\t\t// });\n\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar d = new Date();\n\tvar year = d.getFullYear();\n\n\t$('.copyright').text(year);\n\n\n\t// some code blocks require javascript to function, like slideshows, synopsis blocks, etc\n\t// you can find that code here: https://github.com/DallasMorningNews/generator-dmninteractives/wiki/Cookbook\n\n\n\n});\n"],"sourceRoot":"/source/"}