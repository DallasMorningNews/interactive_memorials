{"version":3,"sources":["+custom.js"],"names":["$","document","ready","writeSubmissions","data","each","k","v","content","submissionTemplate","append","formatData","parks","currentSub","location","lat","long","races","raceKey","push","_","uniqBy","key","value","currentPark","currentRace","race","indexOf","createMap","map","on","e","features","queryRenderedFeatures","point","layers","getCanvas","style","cursor","GeoJSON","parse","Point","include","addSource","type","addLayer","id","source","paint","circle-radius","stops","circle-color","circleColor","circle-opacity","filteringData","counter","filteredData","submissionData","color","clearMap","html","length","addClass","displaySubmissions","removeClass","changeParks","removeSource","removeLayer","parkName","this","attr","thisObj","hasClass","clickLocation","centerCoord","coord","popupContentCir","popupContentNoCir","geocoder","mapboxgl","Geocoder","container","divHeight","click","text","val","hide","slideToggle","accessToken","Map","center","zoom","scrollZoom","disable","addControl","Navigation","Handlebars","compile","getJSON","jQuery","changeShadows","scrollTop","innerHeight","scrollHeight","outerHeight","console","log","height","lngLat","lng","popup","feature","Popup","setLngLat","geometry","coordinates","setHTML","properties","addTo","flyTo","ev","result","d","Date","year","getFullYear"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\n\t\tvar submissionData;\n\t\tvar filteredData = [];\n\t\tvar clickLocation;\n\t\tvar centerCoord;\n\t\tvar coord = [];\n\t\tvar popupContentCir = \"<p>Add a memorial suggestion here?</p><a class='yes-btn-cir btn btn-primary btn-sm'>Yes</a><a class='no-btn btn btn-default btn-sm'>No</a>\";\n\t\tvar popupContentNoCir = \"<p>Add a memorial suggestion here?</p><a class='yes-btn-nocir btn btn-primary btn-sm'>Yes</a><a class='no-btn btn btn-default btn-sm'>No</a>\";\n\t\tvar geocoder = new mapboxgl.Geocoder({\n\t\t\t    container: 'geocoder-container' // Optional. Specify a unique container for the control to be added to.\n\t\t\t});\n\t\tvar counter = 0;\n\t\tvar parks = [];\n\t\tvar race = \"all\";\n\t\tvar customStyles;\n\t\tvar circleColor = \"#e34e36\";\n\t\tvar location;\n\t\tvar divHeight = 0;\n\n\t\t//dropmenu\n\n\t    $(\".dropmenu li a\").click(function(){\n\n\t      $(\".filter-btn:first-child\").text($(this).text());\n\t      $(\".filter-btn:first-child\").val($(this).text());\n\t\t  $('.mapboxgl-popup').hide();\n\n\t   });\n\n\t   $('#filter-desk').click(function() {\n\t\t  $('ul.dropmenu').slideToggle();\n\t   });\n\n\t   $('#filter-mob').click(function() {\n\t\t  $('ul.dropmenu').slideToggle();\n\t   });\n\n\t\tmapboxgl.accessToken = 'pk.eyJ1IjoibWFjbWFuIiwiYSI6ImVEbmNmZjAifQ.zVzy9cyjNT1tMYOTex51HQ';\n\n\t\t// BUILDING THE MAP\n\t\t\tvar map = new mapboxgl.Map({\n\t\t\t\tcontainer: 'map', // the #id of your map\n\t\t\t\tcenter: [-96.9785, 32.8924], // just like Leaflet, where the map should centers on load\n\t\t\t\tzoom: 9, // just like Leaflet, the map's default zoom level\n\t\t\t\tstyle:\n\t\t\t\t 'mapbox://styles/mapbox/basic-v9' // <= this tells Mapbox GL to use our vector tiles\n\t\t\t});\n\n\n\t\t// MAP CUSTOMIZATION\n\t\t\t// disables zoom\n\t\t\t\tmap.scrollZoom.disable();\n\t\t\t// add search bar\n\t\t\t\tmap.addControl(geocoder);\n\t\t\t// adds zoom options\n\t\t\t\tmap.addControl(new mapboxgl.Navigation());\n\t\t\t// adds cursor: pointer to map points\n\t\t\t\tmap.on('mousemove', function (e) {\n\t\t\t\t    var features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\t\t\t\t    map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\t\t\t\t});\n\n\t\t// ADDING DATA TO MAP\n\t\t\t// creating and compiling the template for our person objects\n\t\t\t    var submissionTemplate =  Handlebars.compile($(\"#submission\").html());\n\n\t\t\t\t$.getJSON('js/data.json', function(data) {\n\t\t\t\t\tsubmissionData = data;\n\t\t\t\t\twriteSubmissions(submissionData);\n\t\t\t\t\tmap.on('load', function () {\n\t\t\t\t\t\tformatData(submissionData);\n\t\t\t\t\t});\n\n\n\n\t\t\t\t\t  jQuery(function(changeShadows) {\n\t\t\t\t\t \t $('.submissions').on('scroll', function() {\n\t\t\t\t\t \t\t if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight - 30) {\n\t\t\t\t\t \t\t\t $('#shadow-bottom').removeClass(\"shadow2\");\n\t\t\t\t\t \t\t } else if ($(this).scrollTop() + $(this).innerHeight() <= $(this)[0].scrollHeight) {\n\t\t\t\t\t \t\t\t $('#shadow-bottom').addClass(\"shadow2\");\n\t\t\t\t\t \t\t }\n\t\t\t\t\t \t });\n\t\t\t\t\t  });\n\n\t\t\t\t\t  $(\".sub-btn\").click(function() {\n\t\t\t\t\t\t divHeight = 0;\n\t\t\t\t\t \t $('.exists').each(function() {\n\t\t\t\t\t \t\t divHeight += $(this).outerHeight(true);\n\t\t\t\t\t\t\t console.log(divHeight);\n\t\t\t\t\t \t });\n\t\t\t\t\t \t console.log(\"final height:\" + divHeight);\n\n\t\t\t\t\t\t if (divHeight <= $('.submissions').height()) {\n\t\t\t\t\t\t \t $('#shadow-bottom').removeClass(\"shadow2\");\n\t\t\t\t\t\t } else {\n\t\t\t\t\t\t\t $('#shadow-bottom').addClass(\"shadow2\");\n\t\t\t\t\t\t }\n\t\t\t\t\t  });\n\n\t\t\t\t});\n\n\t\t\t\tfunction writeSubmissions(data) {\n\t\t\t\t\t$.each(data, function(k,v) {\n\t\t\t\t\t\t   var content = submissionTemplate(v);\n\t\t\t\t\t\t   $(\".submissions\").append(content);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\n\n\n\t\t\t\tfunction formatData(data) {\n\t\t\t\t\t// placeholder array for parks mapfeatureg data\n\t\t\t\t\tparks = [];\n\n\n\t\t\t\t\t// iterate over our original datra and create a new object to add to our parks mapfeatureg array\n\t\t\t\t\t$.each(data, function(k,v) {\n\n\t\t\t\t\t  var currentSub = {\n\t\t\t\t\t    \"location\": v.location,\n\t\t\t\t\t    \"lat\": v.lat,\n\t\t\t\t\t    \"long\": v.long,\n\t\t\t\t\t    \"races\": [ ],\n\t\t\t\t\t\t\"raceKey\": v.raceKey\n\t\t\t\t\t};\n\n\t\t\t\t\t  parks.push(currentSub);\n\t\t\t\t\t});\n\n\n\t\t\t\t\t// LODASH: go through our new parks mapfeatureg data, and filter out any that have a duplicate location\n\t\t\t\t\tparks = _.uniqBy(parks, \"location\");\n\n\t\t\t\t\t// iterate over the submissions data again and grab each one's park and race\n\t\t\t\t\t$.each(data, function(key, value) {\n\t\t\t\t\t  var currentPark = value.location;\n\t\t\t\t\t  var currentRace = value.race;\n\n\t\t\t\t\t  // then, iterate over the parks mapfeatureg data, and find the matching park\n\t\t\t\t\t  $.each(parks, function(k,v) {\n\t\t\t\t\t    if (currentPark === v.location) {\n\n\t\t\t\t\t      // then, check over the races array over that park, and if the currentRace isn't included, add it\n\t\t\t\t\t      if (_.indexOf(v.races, currentRace) === -1) {\n\t\t\t\t\t        v.races.push(currentRace);\n\t\t\t\t\t      }\n\t\t\t\t\t    }\n\t\t\t\t\t  });\n\t\t\t\t\t});\n\n\t\t\t\t\tcreateMap(parks);\n\n\t\t\t\t\t// adds cursor: pointer to map points\n\t\t\t\t\t\tmap.on('mousemove', function (e) {\n\t\t\t\t\t\t\tvar features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\t\t\t\t\t\t\tmap.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\n\n\t\t\t\t// Map points customization\n\t\t\t\t\tfunction createMap(data) {\n\t\t\t\t\t\tdata = GeoJSON.parse(data, {Point: ['lat', 'long'], include: ['race', 'location', 'raceKey']});\n\n\t\t\t\t\t\t\t// adding the data source\n\t\t\t\t            map.addSource(\"memorials\", {\n\t\t\t\t                type: \"geojson\",\n\t\t\t\t                data: data\n\t\t\t\t            });\n\t\t\t\t            // adding the data layer\n\t\t\t\t            map.addLayer({\n\t\t\t\t                \"id\": \"memorialSubmissions\",\n\t\t\t\t                \"source\": \"memorials\",\n\t\t\t\t                \"type\": \"circle\",\n\t\t\t\t                \"paint\": {\n\t\t\t\t                    \"circle-radius\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t                        stops: [[1, 10], [8, 10], [16, 9]]\n\t\t\t\t                    },\n\t\t\t\t\t\t\t\t\t'circle-color': circleColor,\n\t\t\t\t\t\t\t\t\t\"circle-opacity\": 0.8\n\t\t\t\t                }\n\t\t\t\t            });\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmap.on('click', function (e) {\n                        clickLocation = e.lngLat;\n                        coord = [clickLocation.lng, clickLocation.lat];\n\n                        // setting features equal to all the circles on the map\n                        var features = map.queryRenderedFeatures(e.point, { layers: ['memorialSubmissions'] });\n\n                        var popup;\n                        // checking to see if the click was on one of the circles.\n                        // if it's not, do all the code inside this if statement\n\n                        if (!features.length) {\n                            popup = new mapboxgl.Popup()\n                                .setLngLat(coord)\n\t\t\t\t\t\t\t\t.setHTML(\"<h5>\" + popupContentNoCir + \"</h5>\")\n                                .addTo(map);\n\t\t\t\t\t\t\t\tmap.flyTo({center: coord});\n                        }\n\n                        // else, if the click is on the circle, do all the code\n                        // inside this else statement\n                        else {\n                            var feature = features[0];\n\n                            // Populate the popup and set its coordinates\n                            // based on the feature found.\n                            popup = new mapboxgl.Popup()\n                                .setLngLat(feature.geometry.coordinates)\n\t\t\t\t\t\t\t\t.setHTML(\"<h5>\" + feature.properties.location + \"</h5>\" + popupContentCir)\n                                .addTo(map);\n\n\n\t\t\t\t\t\t\t\t$(\".submission-nav h1\").html(feature.properties.location);\n\n\t\t\t\t\t\t\tdisplaySubmissions(feature.properties.location);\n                        }\n\n\n\t\t\t\t\t\tif (features.length) {\n\t\t\t\t\t\t\t// Get coordinates from the symbol and center the map on those coordinates\n\t\t\t\t\t\t\tmap.flyTo({center: features[0].geometry.coordinates});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Shows/hides submission form and respective buttons\n\t\t\t\t\t\t// Adds value to textarea\n\n\t\t\t\t\t\t\t$('#form-wrapper').removeClass('visible');\n\n\t\t\t\t\t\t\t$(\".yes-btn-cir\").click(function() {\n\t\t\t\t\t\t\t\t$(\"#form-wrapper\").addClass(\"visible\");\n\t\t\t\t\t\t\t\t// $('#see-form, .map-wrapper h1').hide();\n\t\t\t\t\t\t\t\t$('.mapboxgl-popup').hide();\n\t\t\t\t\t\t\t\t$('textarea#location-blank').val(feature.properties.location + coord);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t$(\".no-btn\").click(function() {\n\t\t\t\t\t\t\t\t$('.mapboxgl-popup').hide();\n\t\t\t\t\t\t\t\t$('#form-wrapper').removeClass('visible');\n\t\t\t\t\t\t\t\t$('textarea#location-blank').val('');\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t$(\".yes-btn-nocir\").click(function() {\n\t\t\t\t\t\t\t\t$(\"#form-wrapper\").addClass(\"visible\");\n\t\t\t\t\t\t\t\t// $('#see-form, .map-wrapper h1').hide();\n\t\t\t\t\t\t\t\t$('.mapboxgl-popup').hide();\n\t\t\t\t\t\t\t\t$('textarea#location-blank').val(coord);\n\t\t\t\t\t\t\t});\n                    });\n\n\t\t\t\t\t// Listen for the `geocoder.input` event that is triggered when a user\n\t\t\t\t    // makes a selection and add a symbol that matches the result.\n\t\t\t\t    geocoder.on('result', function(ev) {\n\n\t\t\t\t\t\t$('.mapboxgl-popup').hide();\n\n\t\t\t\t\t\tcenterCoord = ev.result.geometry.coordinates;\n                        var coord = [centerCoord[0], centerCoord[1]];\n\n                        var popup;\n\n                        popup = new mapboxgl.Popup()\n\t\t\t\t\t\t\t.setLngLat(coord)\n\t\t\t\t\t\t\t.setHTML(\"<h5>\" + popupContentNoCir + \"</h5>\")\n                            .addTo(map);\n\t\t\t\t\t\t\t// map.flyTo({center: coord});\n                        // }\n\n\t\t\t\t    });\n\n\t\t\t\t\t// Shows/hides submission form and respective buttons\n\t\t\t\t\t\t$(\"#see-form, .map-wrapper h1\").click(function() {\n\t\t\t\t\t\t\tif ($('#form-wrapper').hasClass(\"visible\")) {\n\t\t\t\t\t\t\t\t$('#form-wrapper').removeClass(\"visible\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$('#form-wrapper').addClass(\"visible\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$('.close').click(function() {\n\t\t\t\t\t\t\t$('#form-wrapper').removeClass('visible');\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// Getting the value of the drop\n\t\t\t\t\t\t$('.dropmenu li').click(function() {\n\t\t\t\t\t\t\trace = $(this).attr(\"data-race\");\n\t\t\t\t\t\t\tfilteringData(race);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// Formatting the filteredData\n\t\t\t\t\tfunction filteringData(race) {\n\t\t\t\t\t\tcounter = 0;\n\n\t\t\t\t\t\tif (race !== \"all\") {\n\t\t\t\t\t\t\tfilteredData = [];\n\t\t\t\t\t\t\t$.each(submissionData, function(k,v) {\n\t\t\t\t\t\t\t\tif (v.race === race) {\n\t\t\t\t\t\t\t\t\tfilteredData.push(v);\n\t\t\t\t\t\t\t\t\tcircleColor = v.color;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tclearMap();\n\t\t\t\t\t\t\tformatData(filteredData);\n\n\t\t\t\t\t\t\t$(\".submissions\").html(\"\");\n\n\t\t\t\t\t\t\tif (filteredData.length === 0) {\n\t\t\t\t\t\t\t\t$(\".submission-nav h1\").html(\"No locations\");\n\t\t\t\t\t\t\t\t$(\"#sub-btn-prev\").addClass(\"unclickable\");\n\t\t\t\t\t\t\t\t$(\"#sub-btn-next\").addClass(\"unclickable\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\".submission-nav h1\").html(filteredData[counter].location);\n\t\t\t\t\t\t\t\twriteSubmissions(filteredData);\n\t\t\t\t\t\t\t\tdisplaySubmissions(filteredData[counter].location);\n\n\t\t\t\t\t\t\t\t$(\"#sub-btn-prev\").removeClass(\"unclickable\");\n\t\t\t\t\t\t\t\t$(\"#sub-btn-next\").removeClass(\"unclickable\");\n\t\t\t\t\t\t\t\tchangeParks($('.sub-btn'));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclearMap();\n\t\t\t\t\t\t\tcircleColor = \"#e34e36\";\n\t\t\t\t\t\t\tformatData(submissionData);\n\n\t\t\t\t\t\t\t$(\"#sub-btn-prev\").removeClass(\"unclickable\");\n\t\t\t\t\t\t\t$(\"#sub-btn-next\").removeClass(\"unclickable\");\n\t\t\t\t\t\t\tchangeParks($('.sub-btn'));\n\n\t\t\t\t\t\t\t$(\".submissions\").html(\"\");\n\t\t\t\t\t\t\t$(\".submission-nav h1\").html(\"All locations\");\n\t\t\t\t\t\t\twriteSubmissions(submissionData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clears the map of markers\n\t\t\t\t\tfunction clearMap() {\n\t\t\t\t\t\tmap.removeSource(\"memorials\");\n\t\t\t\t\t\tmap.removeLayer(\"memorialSubmissions\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// Displays submissions\n\t\t\t\t\tfunction displaySubmissions(parkName) {\n\t\t\t\t\t\t$.each($(\".card\"), function() {\n\t\t\t\t\t\t\tif ($(this).attr(\"data-park\") === parkName) {\n\t\t\t\t\t\t\t\t$(this).removeClass(\"no-show\");\n\t\t\t\t\t\t\t\t$(this).addClass(\"exists\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(this).addClass(\"no-show\");\n\t\t\t\t\t\t\t\t$(this).removeClass(\"exists\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Previous and next for park sumbissions\n\t\t\t\t\tfunction changeParks(thisObj) {\n\t\t\t\t\t\t// If the you click the prev button and there are still more prev locations to show, keep the prev button clickable\n\t\t\t\t\t\tif (thisObj.attr(\"id\") === \"sub-btn-prev\" && counter > 0) {\n\t\t\t\t\t\t\tcounter --;\n\t\t\t\t\t\t\t$(\"#sub-btn-prev\").removeClass(\"unclickable\");\n\n\t\t\t\t\t\t\tif ((\"#sub-btn-next\").hasClass(\"unclickable\") && counter >= (parks.length - 1)) {\n\t\t\t\t\t\t\t\t$(\"sub-btn-next\").addClass(\"unclickable\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // If you click the next button and there are still locations to the right to show, keep the next button clickable\n\t\t\t\t\t\telse if (thisObj.attr(\"id\") === \"sub-btn-next\" && counter < (parks.length - 1)) {\n\t\t\t\t\t\t\tcounter ++;\n\t\t\t\t\t\t\t$(\"#sub-btn-next\").removeClass(\"unclickable\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If you click the prev button and there are no prev locations to show, make the prev button unclickable and make the next button clickable\n\t\t\t\t\t\tif (thisObj.attr(\"id\") === \"sub-btn-prev\" && counter <= 0) {\n\t\t\t\t\t\t\t$(\"#sub-btn-prev\").addClass(\"unclickable\");\n\n\t\t\t\t\t\t\tif ((\"#sub-btn-next\").hasClass(\"unclickable\") && counter >= (parks.length - 1)) {\n\t\t\t\t\t\t\t\t$(\"sub-btn-next\").addClass(\"unclickable\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\"#sub-btn-next\").removeClass(\"unclickable\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // if you click the next button and there aren't more locations to the right to show, make the next button unclickable and make the prev button clickable\n\t\t\t\t\t\telse if (thisObj.attr(\"id\") == \"sub-btn-next\" && counter >= (parks.length - 1)) {\n\t\t\t\t\t\t\t$(\"#sub-btn-next\").addClass(\"unclickable\");\n\t\t\t\t\t\t\t$(\"#sub-btn-prev\").removeClass(\"unclickable\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(\"#sub-btn-prev\").removeClass(\"unclickable\");\n\t\t\t\t\t\t\t$(\"#sub-btn-next\").removeClass(\"unclickable\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (race === \"all\") {\n\t\t\t\t\t\t\t$(\".submission-nav h1\").html(submissionData[counter].location);\n\t\t\t\t\t\t\tdisplaySubmissions(submissionData[counter].location);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(\".submission-nav h1\").html(filteredData[counter].location);\n\t\t\t\t\t\t\tdisplaySubmissions(filteredData[counter].location);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if ($('#sub-btn-prev').hasClass('unclickable') && $('#sub-btn-next').hasClass('unclickable')) {\n\t\t\t\t\t\t// \t$(\"#sub-btn-prev\").addClass(\"unclickable\");\n\t\t\t\t\t\t// \t$(\"#sub-btn-next\").addClass(\"unclickable\");\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t$(\".sub-btn\").click(function() {\n\t\t\t\t\t    changeParks($(this));\n\t\t\t\t\t});\n\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar d = new Date();\n\tvar year = d.getFullYear();\n\n\t$('.copyright').text(year);\n\n\n\t// some code blocks require javascript to function, like slideshows, synopsis blocks, etc\n\t// you can find that code here: https://github.com/DallasMorningNews/generator-dmninteractives/wiki/Cookbook\n\n\n\n});\n"],"sourceRoot":"/source/"}